{"version":3,"file":"static/js/371.2118cd4e.chunk.js","mappings":"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","sources":["config/ChatLogics.ts","firebase.tsx","components/SingleChat.tsx","components/miscellaneous/ProfileModel.tsx","components/userStufs/UserBadgeItem.tsx","components/userStufs/UserListItem.tsx","components/miscellaneous/UpdateGroup.tsx","components/ChatHeader.tsx","components/icons/Attach.tsx","components/footerIcons/AttachFile.tsx","components/icons/Send.tsx","components/footerIcons/SendOrMic.tsx","components/icons/Emoji.tsx","components/footerIcons/ShowEmoji.tsx","components/InputRoot.tsx","components/Footer.tsx","components/ChatScreen.tsx","components/ChatBox.tsx","components/ChatListItem.tsx","components/ChatList.tsx","components/ChatLoading.tsx","components/icons/GroupAdd.tsx","components/miscellaneous/GroupChatModel.tsx","components/Chats.tsx","components/icons/Moon.tsx","components/miscellaneous/Chatdapp.tsx","components/miscellaneous/SearchModal.tsx","components/miscellaneous/SideDrawer.tsx","pages/Chatpage.tsx"],"sourcesContent":["export const getSender = (loggedUser: any, users: any) => {\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser: any, users: any) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\nexport const getSenderPic = (loggedUser: any, users: any) => {\n  return users[0]._id === loggedUser._id ? users[1].pic : users[0].pic;\n};\n\nexport const getSenderCoin = (loggedUser: any, users: any) => {\n  return users[0]._id === loggedUser._id ? users[1].coin : users[0].coin;\n};\n\nexport const getReceiver = (users: any) => {\n  return users[0].name;\n};\n\nexport const getReceiverFull = (users : any) => {\n  return users[0];\n};\n\nexport const isSameSender = (message: any, m: any, i: any, userId: any) => {\n  return (\n    i < message.length - 1 &&\n    (message[i + 1].sender._id !== m.sender._id ||\n      message[i + 1].sender._id === undefined) &&\n    message[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (message: any, i: any, userId: any) => {\n  return (\n    i === message.length - 1 &&\n    message[message.length - 1].sender._id !== userId &&\n    message[message.length - 1].sender._id\n  );\n};\n\nexport const isSameSenderMargin = (\n  messages: any,\n  m: any,\n  i: any,\n  userId: any\n) => {\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameUser = (message: any, m: any, i: any) => {\n  return i > 0 && message[i - 1].sender._id === m.sender._id;\n};\n\nexport const isSameReceiver = (message: any, m: any, i: any, userId: any) => {\n  return (\n    i < message.length - 1 &&\n    (message[i + 1].sender._id === m.sender._id ||\n      message[i + 1].sender._id === undefined) &&\n    message[i].sender._id === userId\n  );\n};\n","import { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC85qBd04aedB2d_8ltfKEGV6hQhW8qslw\",\n  authDomain: \"chatdapp-maern.firebaseapp.com\",\n  databaseURL: \"https://chatdapp-maern-default-rtdb.firebaseio.com\",\n  projectId: \"chatdapp-maern\",\n  storageBucket: \"chatdapp-maern.appspot.com\",\n  messagingSenderId: \"322704650394\",\n  appId: \"1:322704650394:web:161bcb1828c1a572faef23\"\n};\n\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const storage = getStorage(app);\n","import { Box, Text, useColorMode, useToast } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { ChatState } from \"../context/ChatProvider\";\nimport { storage } from \"../firebase\";\nimport ChatScreen from \"./ChatScreen\";\nimport \"./styles.css\";\n\nconst ENDPOINT =\n  process.env.NODE_ENV === \"production\"\n    ? \"https://chatdapp-mern.herokuapp.com\"\n    : \"http://localhost:8000\";\nvar socket: any, selectedChatCompare: any;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }: any) => {\n  const [message, setMessage]: any = useState([]);\n  const [loading, setLoading]: any = useState(false);\n  const [newMessage, setNewMessage]: any = useState(\"\");\n  const [socketConnected, setSocketConnected]: any = useState(false);\n  const [typing, setTyping]: any = useState(false);\n  const [isTyping, setIsTyping]: any = useState(false);\n  const [showPicker, setShowPicker]: any = useState(false);\n  const [showGifPicker, setShowGifPicker]: any = useState(false);\n  const [gif, setGif]: any = useState(\"\");\n  const [picLoading, setPicLoading]: any = useState(false);\n  const [pic, setPic]: any = useState(\"\");\n  const [audioLoading, setAudioLoading]: any = useState(false);\n  const [audio, setAudio]: any = useState(\"\");\n  const [isRecording, setIsRecording]: any = useState();\n  const [isAudioRecording, setIsAudioRecording]: any = useState(false);\n  const [videoLoading, setVideoLoading]: any = useState(false);\n  const [video, setVideo]: any = useState(\"\");\n  const [fileLoading, setFileLoading]: any = useState(false);\n  const [star, setStar]: any = useState(false);\n  const [file, setFile]: any = useState(\"\");\n  const audioPlay = new Audio(\n    \"https://firebasestorage.googleapis.com/v0/b/storage-1a7bb.appspot.com/o/files%2Fimessage_send_sound%20(1).mp3?alt=media&token=6a7cf28e-d678-406a-9473-b1a6b4751cff\"\n  );\n\n  const toast = useToast();\n  const { colorMode } = useColorMode();\n\n  const {\n    user,\n    selectedChat,\n    setSelectedChat,\n    setNotification,\n    notification,\n  }: any = ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n\n      setMessage(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occurred!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message received\", (newMessages: any) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessages.chat._id\n      ) {\n        if (!notification.includes(newMessages)) {\n          setNotification([newMessages, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessage([...message, newMessages]);\n      }\n    });\n  });\n\n  const postDetails = (file: any) => {\n    if (!file.type.match(\"image.*\")) {\n      alert(\"Please select image only.\");\n    } else {\n      var reader = new FileReader();\n\n      reader.addEventListener(\n        \"load\",\n        () => {\n          setPic(reader.result);\n        },\n        false\n      );\n\n      if (file) {\n        reader.readAsDataURL(file);\n      }\n    }\n  };\n\n  const postVideo = (e: any) => {\n    setVideoLoading(true);\n    const data = new FormData();\n    data.append(\"file\", e);\n    data.append(\"upload_preset\", \"chat-app-mern\");\n    data.append(\"cloud_name\", \"yuvraj-choudahry-dev\");\n    fetch(\"https://api.cloudinary.com/v1_1/yuvraj-choudahry-dev/video/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setVideo(data.url.toString());\n        console.log(data.url.toString());\n        setVideoLoading(false);\n      })\n      .catch((err) => {\n        setVideoLoading(false);\n      });\n  };\n\n  const postAudio = (e: any) => {\n    setAudioLoading(true);\n    const data = new FormData();\n    data.append(\"file\", e);\n    data.append(\"upload_preset\", \"chat-app-mern\");\n    data.append(\"cloud_name\", \"yuvraj-choudahry-dev\");\n    fetch(\"https://api.cloudinary.com/v1_1/yuvraj-choudahry-dev/video/upload\", {\n      method: \"post\",\n      body: data,\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setAudio(data.url.toString());\n        console.log(data.url.toString());\n        setAudioLoading(false);\n      })\n      .catch((err) => {\n        setAudioLoading(false);\n      });\n  };\n\n  const postFile = (e: any) => {\n    setFileLoading(true);\n\n    if (!e) return;\n    if (e.type !== \"image/*\" || e.type !== \"video/*\") {\n      const storageRef = ref(storage, `/files/${e.name}`);\n      const uploadTask = uploadBytesResumable(storageRef, e);\n\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {},\n        (err) => {\n          console.log(err);\n          setFileLoading(false);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then((url: any) => {\n            console.log(url);\n            setFile(url);\n            setFileLoading(false);\n          });\n        }\n      );\n    } else {\n      setFileLoading(false);\n      return;\n    }\n  };\n\n  const setGifHandler = (e: any) => {\n    setGif(e);\n    setShowGifPicker(false);\n    setShowPicker(false);\n  };\n\n  const sendMessage = async (e: any) => {\n    if (\n      e.keyCode === 13 &&\n      newMessage.trim() !== \"\" &&\n      (newMessage || pic || audio || gif || video)\n    ) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        const { data } = await axios.post(\n          \"api/message\",\n          {\n            content: newMessage,\n            image: pic,\n            audio: audio,\n            file: file,\n            chatId: selectedChat._id,\n            gif: gif,\n            video: video,\n            star: star,\n          },\n          config\n        );\n\n        socket.emit(\"new message\", data);\n        setNewMessage(\"\");\n        setShowPicker(false);\n        setPic(\"\");\n        setAudio(\"\");\n        setGif(\"\");\n        setVideo(\"\");\n        setFile(\"\");\n        audioPlay.play();\n        setMessage([...message, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occurred!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  const sendMessageButton = async () => {\n    if (\n      (newMessage && newMessage.trim() !== \"\") ||\n      pic ||\n      audio ||\n      gif ||\n      video\n    ) {\n            socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n\n        const { data } = await axios.post(\n          \"api/message\",\n          {\n            content: newMessage,\n            image: pic,\n            file: file,\n            audio: audio,\n            chatId: selectedChat._id,\n            gif: gif,\n            video: video,\n          },\n          config\n        );\n\n        socket.emit(\"new message\", data);\n        setNewMessage(\"\");\n        setShowPicker(false);\n        setPic(\"\");\n        setAudio(\"\");\n        setGif(\"\");\n        setVideo(\"\");\n        setFile(\"\");\n        audioPlay.play();\n        setMessage([...message, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occurred!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  const typingHandler = (e: any) => {\n    setNewMessage(e);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  const onEmojiClick = (emojiObject: any) => {\n    setNewMessage((p: any) => p + emojiObject);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 1000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  const deleteMessage = async (m: any) => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        `/api/message/messages`,\n        {\n          _id: m._id,\n        },\n        config\n      );\n\n      fetchMessages();\n    } catch (error) {\n      toast({\n        title: \"Error Occurred!\",\n        description: \"Failed to Delete the Message\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const deleteChat = async () => {\n    setSelectedChat();\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.put(\n        \"/api/chat/remove\",\n        {\n          _id: selectedChat._id,\n        },\n        config\n      );\n      setFetchAgain(!fetchAgain);\n    } catch (error) {\n      toast({\n        title: \"Error Occurred!\",\n        description: \"Failed to Delete the Chat\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <ChatScreen\n          colorMode={colorMode}\n          setSelectedChat={setSelectedChat}\n          message={message}\n          user={user}\n          fetchMessages={fetchMessages}\n          deleteChat={deleteChat}\n          fetchAgain={fetchAgain}\n          setFetchAgain={setFetchAgain}\n          selectedChat={selectedChat}\n          pic={pic}\n          audio={audio}\n          gif={gif}\n          video={video}\n          file={file}\n          showPicker={showPicker}\n          loading={loading}\n          isTyping={isTyping}\n          deleteMessage={deleteMessage}\n          showGifPicker={showGifPicker}\n          setGifHandler={setGifHandler}\n          newMessage={newMessage}\n          sendMessageButton={sendMessageButton}\n          sendMessage={sendMessage}\n          setShowPicker={setShowPicker}\n          typingHandler={typingHandler}\n          postDetails={postDetails}\n          picLoading={picLoading}\n          setPic={setPic}\n          postAudio={postAudio}\n          audioLoading={audioLoading}\n          videoLoading={videoLoading}\n          fileLoading={fileLoading}\n          setAudio={setAudio}\n          setShowGifPicker={setShowGifPicker}\n          setGif={setGif}\n          postVideo={postVideo}\n          setVideo={setVideo}\n          onEmojiClick={onEmojiClick}\n          setFile={setFile}\n          postFile={postFile}\n          star={star}\n          setStar={setStar}\n          isRecording={isRecording}\n          setIsRecording={setIsRecording}\n          isAudioRecording={isAudioRecording}\n          setIsAudioRecording={setIsAudioRecording}\n        />\n      ) : (\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Nunito\">\n            Click on a user or a group to start chating\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","import {\n  Avatar,\n  Box,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  Tooltip,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n\nconst ProfileModel = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <Box>\n      {children ? (\n        <Text fontFamily=\"Nunito\" p={2} fontSize={18} onClick={onOpen}>\n          {children}\n        </Text>\n      ) : (\n          <Text fontFamily=\"Nunito\" p={5} fontSize={22} onClick={onOpen}>\n            View Profile\n          </Text>\n      )}\n\n      <Modal\n        size=\"3xl\"\n        isOpen={isOpen}\n        onClose={onClose}\n        isCentered\n        motionPreset=\"slideInBottom\"\n      >\n        <ModalOverlay bg=\"none\" backdropFilter=\"auto\" backdropBlur=\"5px\" />\n        <ModalContent minHeight=\"450px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Nunito\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton borderRadius=\"50%\" fontSize=\"15px\" variant=\"\" />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Avatar boxSize=\"250px\" src={user.pic} name={user.name} />\n          </ModalBody>\n          <ModalFooter d=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n            <Text fontSize={{ base: \"28px\", md: \"30px\" }} fontFamily=\"Nunito\">\n              Email: {user.email}\n            </Text>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default ProfileModel;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Box } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nconst UserBadgeItem = ({ user, handleFunction }) => {\n  return (\n    <Box\n      px={2}\n      py={1}\n      borderRadius=\"3xl\"\n      m={1}\n      mb={2}\n      fontSize={12}\n      backgroundColor=\"#805ad5\"\n      color=\"white\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      <CloseIcon pl={1} />\n    </Box>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar, Box, Text, useColorMode } from '@chakra-ui/react';\n\nconst UserListItem = ({ user, handleFunction }) => {\n    const { colorMode } = useColorMode();\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"xl\"\n      boxShadow=\"inner\"\n      className=\"transition-all duration-1000 ease-in-out\"\n      bg={colorMode === \"dark\" ? \"#232b38\" : \"#E8E8E8\"}\n      _hover={{\n        backgroundColor: \"#38B2AC\",\n        color: \"white\",\n        boxShadow: \"md\",\n      }}\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text fontFamily=\"Nunito\">{user.name}</Text>\n        <Text fontFamily=\"Nunito\" fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import {\n  Box,\n  Button,\n  FormControl,\n  Input,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Spinner,\n  Text,\n  useDisclosure,\n  useToast,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../context/ChatProvider\";\nimport UserBadgeItem from \"../userStufs/UserBadgeItem\";\nimport UserListItem from \"../userStufs/UserListItem\";\n\nconst UpdateGroup = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose }: any = useDisclosure();\n  const [groupChatName, setGroupChatName]: any = useState();\n  const [search, setSearch]: any = useState(\"\");\n  const [searchResult, setSearchResult]: any = useState([]);\n  const [loading, setLoading]: any = useState(false);\n  const [renameloading, setRenameLoading]: any = useState(false);\n  const [picLoading, setPicLoading]: any = useState(false);\n  const [pic, setPic]: any = useState();\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user }: any = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n    const postDetails = (file: any) => {\n      if (!file.type.match(\"image.*\")) {\n        alert(\"Please select image only.\");\n      } else {\n        var reader = new FileReader();\n\n        reader.addEventListener(\n          \"load\",\n          () => {\n            setPic(reader.result);\n          },\n          false\n        );\n\n        if (file) {\n          reader.readAsDataURL(file);\n        }\n      }\n    };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n          pic: pic,\n        },\n        config\n      );\n\n      console.log(data._id);\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error: any) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1: any) => {\n    if (selectedChat.users.find((u: any) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error: any) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error: any) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <Text fontFamily=\"Nunito\" p={5} fontSize={22} onClick={onOpen}>\n        Update Group\n      </Text>\n\n      <Modal\n        size=\"3xl\"\n        onClose={onClose}\n        isOpen={isOpen}\n        isCentered\n        motionPreset=\"slideInBottom\"\n      >\n        <ModalOverlay bg=\"none\" backdropFilter=\"auto\" backdropBlur=\"5px\" />\n        <ModalContent minHeight=\"450px\">\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Nunito\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton borderRadius=\"50%\" fontSize=\"15px\" variant=\"\" />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Group Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                type=\"file\"\n                p={1.5}\n                accept=\"image/*\"\n                onChange={(e: any) => postDetails(e.target.files[0])}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"3xl\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroup;\n","import { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport {\n  Avatar,\n  Box,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  SlideFade,\n  Text,\n  Tooltip,\n} from \"@chakra-ui/react\";\nimport { Close, MoreVert, Refresh } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { getSender, getSenderFull, getSenderPic } from \"../config/ChatLogics\";\nimport ProfileModel from \"./miscellaneous/ProfileModel\";\nimport UpdateGroup from \"./miscellaneous/UpdateGroup\";\nimport \"./styles.css\";\n\nconst ChatHeader = ({\n  colorMode,\n  setSelectedChat,\n  message,\n  user,\n  fetchMessages,\n  deleteChat,\n  fetchAgain,\n  setFetchAgain,\n  selectedChat,\n  isPreview,\n  setPic,\n  setAudio,\n  setVideo,\n  setFile,\n  setGif,\n}) => {\n  const history = useHistory();\n  return (\n    <Text\n      fontSize={{\n        base: \"28px\",\n        xl: \"30px\",\n      }}\n      fontFamily=\"Nunito\"\n      pb={3}\n      px={2}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      bg={colorMode === \"dark\" ? \"#2d3748\" : \"white\"}\n    >\n      {isPreview ? (\n        <SlideFade in={isPreview} offsetY=\"2000px\">\n          <Box d=\"flex\">\n            <IconButton\n              icon={<Close />}\n              onClick={() => {\n                setPic(\"\");\n                setVideo(\"\");\n                setFile(\"\");\n                setGif(\"\");\n              }}\n              aria-label=\"back\"\n              variant=\"\"\n              isRound\n            />\n            <Text fontFamily=\"Nunito\" ml={3}>\n              Preview\n            </Text>\n          </Box>\n        </SlideFade>\n      ) : (\n        <>\n          <IconButton\n            d={{\n              base: \"flex\",\n              xl: \"none\",\n            }}\n            icon={<ArrowBackIcon />}\n            onClick={() => {\n              setSelectedChat();\n              history.push(\"/@\");\n            }}\n            aria-label=\"back\"\n            fontSize=\"2xl\"\n            variant=\"\"\n            isRound\n          />\n          {message && (\n            <>\n              {!selectedChat.isGroupChat ? (\n                <>\n                  <Avatar\n                    name={getSender(user, selectedChat.users)}\n                    src={getSenderPic(user, selectedChat.users)}\n                    ml={{\n                      base: 3,\n                      xl: 0,\n                    }}\n                  />\n\n                  <Text\n                    ml={2}\n                    textOverflow=\"ellipsis\"\n                    whiteSpace=\"nowrap\"\n                    maxWidth=\"fit-content\"\n                    fontFamily=\"Nunito\"\n                    overflow=\"hidden\"\n                  >\n                    {getSender(user, selectedChat.users)}\n                  </Text>\n                </>\n              ) : (\n                <>\n                  <Avatar\n                    name={selectedChat.chatName}\n                    src={selectedChat.pic}\n                    ml={{\n                      base: 3,\n                      xl: 0,\n                    }}\n                  />\n                  <Box>\n                    <Text\n                      ml={2}\n                      textOverflow=\"ellipsis\"\n                      whiteSpace=\"nowrap\"\n                      maxWidth=\"fit-content\"\n                      overflow=\"hidden\"\n                      fontFamily=\"Nunito\"\n                    >\n                      {selectedChat.chatName}\n                    </Text>\n                  </Box>\n                </>\n              )}\n              <Box marginLeft=\"auto\" d=\"flex\">\n                <IconButton\n                  icon={<Refresh />}\n                  onClick={() => fetchMessages()}\n                  aria-label=\"refresh\"\n                  variant=\"\"\n                  isRound\n                />\n                <Menu>\n                  <MenuButton as={IconButton} ml={2} variant=\"\" isRound>\n                    <MoreVert />\n                  </MenuButton>\n                  <MenuList\n                    borderColor=\"#d3d3d300\"\n                    borderRadius=\"33px\"\n                    boxShadow=\"2xl\"\n                  >\n                    <MenuItem borderRadius=\"24px 24px 0 0\">\n                        <Text\n                          p={5}\n                          fontSize={22}\n                          onClick={() => deleteChat()}\n                          fontFamily=\"Nunito\"\n                        >\n                          Delete {selectedChat.isGroupChat ? \"Group\" : \"Chat\"}\n                        </Text>\n                    </MenuItem>\n\n                    <MenuDivider />\n\n                    {!selectedChat.isGroupChat ? (\n                      <MenuItem borderRadius=\"0 0 24px 24px\">\n                        <ProfileModel\n                          user={getSenderFull(user, selectedChat.users)}\n                          children={null}\n                        />\n                      </MenuItem>\n                    ) : (\n                      <MenuItem borderRadius=\"0 0 24px 24px\">\n                        <UpdateGroup\n                          fetchMessages={fetchMessages}\n                          fetchAgain={fetchAgain}\n                          setFetchAgain={setFetchAgain}\n                        />\n                      </MenuItem>\n                    )}\n                  </MenuList>\n                </Menu>\n              </Box>\n            </>\n          )}\n        </>\n      )}\n    </Text>\n  );\n};\n\nexport default ChatHeader;\n","const Attach = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      className=\"\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M1.816 15.556v.002c0 1.502.584 2.912 1.646 3.972s2.472 1.647 3.974 1.647a5.58 5.58 0 0 0 3.972-1.645l9.547-9.548c.769-.768 1.147-1.767 1.058-2.817-.079-.968-.548-1.927-1.319-2.698-1.594-1.592-4.068-1.711-5.517-.262l-7.916 7.915c-.881.881-.792 2.25.214 3.261.959.958 2.423 1.053 3.263.215l5.511-5.512c.28-.28.267-.722.053-.936l-.244-.244c-.191-.191-.567-.349-.957.04l-5.506 5.506c-.18.18-.635.127-.976-.214-.098-.097-.576-.613-.213-.973l7.915-7.917c.818-.817 2.267-.699 3.23.262.5.501.802 1.1.849 1.685.051.573-.156 1.111-.589 1.543l-9.547 9.549a3.97 3.97 0 0 1-2.829 1.171 3.975 3.975 0 0 1-2.83-1.173 3.973 3.973 0 0 1-1.172-2.828c0-1.071.415-2.076 1.172-2.83l7.209-7.211c.157-.157.264-.579.028-.814L11.5 4.36a.572.572 0 0 0-.834.018l-7.205 7.207a5.577 5.577 0 0 0-1.645 3.971z\"\n      />\n    </svg>\n  );\n};\n\nexport default Attach;\n","import {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Text,\n} from \"@chakra-ui/react\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Gif } from \"@material-ui/icons\";\nimport Attach from \"../icons/Attach\";\n\nconst AttachFile = ({\n  showPicker,\n  showGifPicker,\n  colorMode,\n  setShowGifPicker,\n  postDetails,\n  postVideo,\n  postFile,\n}) => {\n  return (\n    <>\n      {showPicker ? (\n        !showGifPicker && (\n          <IconButton\n            style={{\n              marginRight: 7,\n              marginLeft: -15,\n              color: colorMode === \"dark\" ? \"#898787\" : \"#707070\",\n            }}\n            onClick={() => setShowGifPicker(true)}\n          >\n            <Gif />\n          </IconButton>\n        )\n      ) : (\n        <Menu>\n          <MenuButton\n            as={IconButton}\n            style={{\n              marginRight: 7,\n              marginLeft: -15,\n              color: colorMode === \"dark\" ? \"#898787\" : \"#707070\",\n            }}\n          >\n            <Attach />\n          </MenuButton>\n          <MenuList borderColor=\"#d3d3d300\" borderRadius=\"33px\" boxShadow=\"2xl\">\n            <MenuItem borderRadius=\"24px 24px 0 0\">\n              <label htmlFor=\"icon-button-file\">\n                <input\n                  id=\"icon-button-file\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  style={{\n                    display: \"none\",\n                  }}\n                  onChange={(e: any) => postDetails(e.target.files[0])}\n                />\n                <Text p={3} fontSize={20}>\n                  Attach Image\n                </Text>\n              </label>\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem>\n              <label htmlFor=\"contained-button\">\n                <input\n                  id=\"contained-button\"\n                  type=\"file\"\n                  accept=\"video/*\"\n                  style={{\n                    display: \"none\",\n                  }}\n                  onChange={(e: any) => postVideo(e.target.files[0])}\n                />\n                <Text p={3} fontSize={20}>\n                  Attach Video\n                </Text>\n              </label>\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem borderRadius=\"0 0 24px 24px\" d=\"flex\">\n              <label htmlFor=\"contained\">\n                <input\n                  id=\"contained\"\n                  type=\"file\"\n                  accept=\"file/*\"\n                  style={{\n                    display: \"none\",\n                  }}\n                  onChange={(e: any) => postFile(e.target.files[0])}\n                />\n                <Text p={3} fontSize={20}>\n                  Attach File\n                </Text>\n              </label>\n            </MenuItem>\n          </MenuList>\n        </Menu>\n      )}\n    </>\n  );\n};\n\nexport default AttachFile;\n","const Send = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      className=\"\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M1.101 21.757 23.8 12.028 1.101 2.3l.011 7.912 13.623 1.816-13.623 1.817-.011 7.912z\"\n      />\n    </svg>\n  );\n};\n\nexport default Send;\n","import { Spinner } from \"@chakra-ui/react\";\nimport AudioReactRecorder, { RecordState } from \"@kazzkiq/audio-react-recorder\";\nimport { IconButton } from \"@material-ui/core\";\nimport { Mic, SettingsVoiceRounded } from \"@material-ui/icons\";\nimport Send from \"../icons/Send\";\n\nconst SendOrMic = ({\n  newMessage,\n  pic,\n  audio,\n  gif,\n  video,\n  colorMode,\n  sendMessageButton,\n  picLoading,\n  audioLoading,\n  videoLoading,\n  fileLoading,\n  setIsAudioRecording,\n  isRecording,\n  onStop,\n  isAudioRecording,\n  setIsRecording,\n}) => {\n  if (isAudioRecording === true) {\n    setIsRecording(RecordState.START);\n  } else {\n    setIsRecording(RecordState.STOP);\n  }\n\n  return (\n    <>\n      {(newMessage && newMessage.trim() !== \"\") ||\n      pic ||\n      audio ||\n      gif ||\n      video ? (\n        <>\n          <IconButton\n            style={{\n              marginLeft: 5,\n              color: colorMode === \"dark\" ? \"#898787\" : \"#707070\",\n            }}\n            onClick={sendMessageButton}\n          >\n            <Send />\n          </IconButton>\n        </>\n      ) : picLoading || audioLoading || videoLoading || fileLoading ? (\n        <IconButton\n          disableRipple\n          style={{\n            marginLeft: 7,\n            color: colorMode === \"dark\" ? \"#898787\" : \"#707070\",\n          }}\n        >\n          <Spinner />\n        </IconButton>\n      ) : (\n        <>\n          <IconButton\n            style={{\n              marginLeft: 5,\n              marginRight: -10,\n              color: colorMode === \"dark\" ? \"#898787\" : \"#707070\",\n            }}\n            onClick={() => setIsAudioRecording((e) => !e)}\n          >\n            {isAudioRecording ? <SettingsVoiceRounded /> : <Mic />}\n          </IconButton>\n          <AudioReactRecorder\n            state={isRecording}\n            onStop={(e) => onStop(e)}\n            canvasWidth=\"0px\"\n            canvasHeight=\"0px\"\n            type=\"audio/mp3\"\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SendOrMic;\n","const Emoji = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      className=\"ekdr8vow dhq51u3o\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M9.153 11.603c.795 0 1.439-.879 1.439-1.962s-.644-1.962-1.439-1.962-1.439.879-1.439 1.962.644 1.962 1.439 1.962zm-3.204 1.362c-.026-.307-.131 5.218 6.063 5.551 6.066-.25 6.066-5.551 6.066-5.551-6.078 1.416-12.129 0-12.129 0zm11.363 1.108s-.669 1.959-5.051 1.959c-3.505 0-5.388-1.164-5.607-1.959 0 0 5.912 1.055 10.658 0zM11.804 1.011C5.609 1.011.978 6.033.978 12.228s4.826 10.761 11.021 10.761S23.02 18.423 23.02 12.228c.001-6.195-5.021-11.217-11.216-11.217zM12 21.354c-5.273 0-9.381-3.886-9.381-9.159s3.942-9.548 9.215-9.548 9.548 4.275 9.548 9.548c-.001 5.272-4.109 9.159-9.382 9.159zm3.108-9.751c.795 0 1.439-.879 1.439-1.962s-.644-1.962-1.439-1.962-1.439.879-1.439 1.962.644 1.962 1.439 1.962z\"\n      />\n    </svg>\n  );\n};\n\nexport default Emoji;\n","import { IconButton } from \"@material-ui/core\";\nimport { Close } from \"@material-ui/icons\";\nimport Emoji from \"../icons/Emoji\";\n\nconst ShowEmoji = ({\n  showGifPicker,\n  colorMode,\n  setShowGifPicker,\n  setShowPicker,\n  showPicker,\n}) => {\n  return (\n    <>\n      {showGifPicker ? (\n        <IconButton\n          style={{\n            marginRight: 7,\n            color: colorMode === \"dark\" ? \"#898787\" : \"#707070\",\n          }}\n          onClick={() => setShowGifPicker((val: any) => !val)}\n        >\n          <Close />\n        </IconButton>\n      ) : showPicker ? (\n        <IconButton\n          style={{\n            marginRight: 7,\n            color: colorMode === \"dark\" ? \"#898787\" : \"#707070\",\n          }}\n          onClick={() => setShowPicker((val: any) => !val)}\n        >\n          <Close />\n        </IconButton>\n      ) : (\n        <IconButton\n          style={{\n            marginRight: 7,\n            color: colorMode === \"dark\" ? \"#898787\" : \"#707070\",\n          }}\n          onClick={() => setShowPicker((val: any) => !val)}\n        >\n          <Emoji />\n        </IconButton>\n      )}\n    </>\n  );\n};\n\nexport default ShowEmoji;\n","import { useColorMode } from \"@chakra-ui/react\";\nimport { TextareaAutosize } from \"@material-ui/core\";\n\nconst InputRoot = ({ newMessage, typingHandler, placeholder }) => {\n  const { colorMode } = useColorMode();\n  return (\n    <TextareaAutosize\n      minRows={1}\n      maxRows={4}\n      style={{\n        width: \"100%\",\n        minHeight: \"47px\",\n        maxHeight: \"148px\",\n        border: \"none\",\n        fontSize: 20,\n        borderRadius: \"10px\",\n        outline: \"none\",\n        background: colorMode === \"dark\" ? \"#232b38\" : \"#f0f2f5\",\n        padding: \"8px\",\n        boxShadow: \"0 25px 50px -12px rgba(0, 0, 0, 0.5)\",\n      }}\n      placeholder={placeholder}\n      value={newMessage}\n      onChange={(e) => typingHandler(e.target.value)}\n    />\n  );\n};\n\nexport default InputRoot;\n","import { Box, FormControl, useColorMode } from \"@chakra-ui/react\";\nimport { EmojiPicker } from \"react-emoji-search\";\nimport Picker from \"react-giphy-component\";\nimport ModalImage from \"react-image-modal\";\nimport AttachFile from \"./footerIcons/AttachFile\";\nimport SendOrMic from \"./footerIcons/SendOrMic\";\nimport ShowEmoji from \"./footerIcons/ShowEmoji\";\nimport InputRoot from \"./InputRoot\";\nimport \"./styles.css\";\nimport AudioPlayer from 'react-h5-audio-player';\n\nconst Footer = ({\n  sendMessage,\n  setShowPicker,\n  sendMessageButton,\n  newMessage,\n  typingHandler,\n  pic,\n  postDetails,\n  picLoading,\n  setPic,\n  file,\n  setFile,\n  postAudio,\n  postFile,\n  audio,\n  audioLoading,\n  setAudio,\n  showPicker,\n  setShowGifPicker,\n  showGifPicker,\n  gif,\n  setGif,\n  postVideo,\n  videoLoading,\n  video,\n  setVideo,\n  onEmojiClick,\n  fileLoading,\n  setGifHandler,\n  isRecording,\n  setIsRecording,\n  isAudioRecording,\n  setIsAudioRecording,\n}) => {\n  const { colorMode } = useColorMode();\n  const isPreview = pic || video || file || gif;\n\n  const onStop = (audioData) => {\n    console.log(\"audioData\", audioData);\n    setAudio(audioData.url);\n  };\n\n  return (\n    <>\n      <>\n        <Box overflow=\"scroll\">\n          {pic && !showPicker ? (\n            <Box alignItems=\"center\" d=\"flex\" flexDir=\"column\">\n              <ModalImage\n                showRotation={true}\n                showZoom={true}\n                showDownload={true}\n                src={pic}\n                alt=\"\"\n                className=\"image2\"\n              />\n            </Box>\n          ) : (\n            <></>\n          )}\n          {gif && !showPicker ? (\n            <Box alignItems=\"center\" d=\"flex\" flexDir=\"column\">\n              <ModalImage\n                showRotation={true}\n                showZoom={true}\n                src={gif}\n                alt=\"\"\n                className=\"image2\"\n              />\n            </Box>\n          ) : (\n            <></>\n          )}\n          {video && !showPicker ? (\n            <Box alignItems=\"center\" d=\"flex\" flexDir=\"column\">\n              <video src={video} controls={true} className=\"video\"></video>\n            </Box>\n          ) : (\n            <></>\n          )}\n          {file && !showPicker ? (\n            <Box alignItems=\"center\" d=\"flex\" flexDir=\"column\">\n              <iframe src={file} className=\"file\"></iframe>\n            </Box>\n          ) : (\n            <></>\n          )}\n        </Box>\n        {showPicker && !showGifPicker ? (\n          <EmojiPicker\n            emojiVersion={14.0}\n            emojiSize={45}\n            onEmojiClick={(e) => onEmojiClick(e)}\n            set=\"native\"\n            tabsVariant=\"fullWidth\"\n            styles={{\n              backgroundColor: colorMode === \"dark\" ? \"#2d3748\" : \"#fff\",\n              indicatorColor: colorMode !== \"dark\" ? \"#232b38\" : \"#f9f2f5\",\n              fontColor: \"lightgrey\",\n              searchBackgroundColor:\n                colorMode === \"dark\" ? \"#232b38\" : \"#f9f2f5\",\n              tabsFontColor: colorMode !== \"dark\" ? \"#232b38\" : \"#f9f9f9\",\n              searchFontColor: \"lightgrey\",\n              skinTonePickerBackgroundColor:\n                colorMode === \"dark\" ? \"#232b38\" : \"#f9f2f5\",\n            }}\n            mode={colorMode === \"dark\" ? \"dark\" : \"light\"}\n          />\n        ) : (\n          <></>\n        )}\n        {showGifPicker && (\n          <Picker\n            apiKey=\"P9bkVJ0Z7fcRkW7dRCrZz7BgNsrtc30f\"\n            onSelected={(p: any) => setGifHandler(p.downsized.url)}\n            width=\"100%\"\n          />\n        )}\n        {isPreview ? (\n          <>\n            <FormControl\n              isRequired\n              w=\"100%\"\n              fontFamily=\"Nunito\"\n              d=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              px={20}\n              mt=\"auto\"\n            >\n              <ShowEmoji\n                showGifPicker={showGifPicker}\n                colorMode={colorMode}\n                setShowGifPicker={setShowGifPicker}\n                setShowPicker={setShowPicker}\n                showPicker={showPicker}\n              />\n              <InputRoot\n                newMessage={newMessage}\n                typingHandler={typingHandler}\n                placeholder=\"Add a caption...\"\n              />\n              <SendOrMic\n                newMessage={newMessage}\n                pic={pic}\n                audio={audio}\n                gif={gif}\n                video={video}\n                colorMode={colorMode}\n                sendMessageButton={sendMessageButton}\n                picLoading={picLoading}\n                audioLoading={audioLoading}\n                videoLoading={videoLoading}\n                fileLoading={fileLoading}\n                setIsAudioRecording={setIsAudioRecording}\n                isRecording={isRecording}\n                onStop={onStop}\n                isAudioRecording={isAudioRecording}\n                setIsRecording={setIsRecording}\n              />\n            </FormControl>\n          </>\n        ) : (\n          <>\n            <FormControl\n              onKeyDown={sendMessage}\n              isRequired\n              w=\"100%\"\n              fontFamily=\"Nunito\"\n              d=\"flex\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              pt={3}\n              px={2}\n            >\n              {audio ? (\n                <AudioPlayer\n                  src={audio}\n                  style={{\n                    backgroundColor: colorMode === \"dark\" ? \"#232b38\" : \"#fff\",\n                    color: colorMode === \"dark\" ? \"#fff\" : \"#333\",\n                  }}\n                />\n              ) : (\n                <>\n                  <ShowEmoji\n                    showGifPicker={showGifPicker}\n                    colorMode={colorMode}\n                    setShowGifPicker={setShowGifPicker}\n                    setShowPicker={setShowPicker}\n                    showPicker={showPicker}\n                  />\n                  <AttachFile\n                    showPicker={showPicker}\n                    showGifPicker={showGifPicker}\n                    colorMode={colorMode}\n                    setShowGifPicker={setShowGifPicker}\n                    postDetails={postDetails}\n                    postVideo={postVideo}\n                    postFile={postFile}\n                  />\n                  <InputRoot\n                    newMessage={newMessage}\n                    typingHandler={typingHandler}\n                    placeholder=\"Type a message\"\n                  />\n                </>\n              )}\n              <SendOrMic\n                newMessage={newMessage}\n                pic={pic}\n                audio={audio}\n                gif={gif}\n                video={video}\n                colorMode={colorMode}\n                sendMessageButton={sendMessageButton}\n                picLoading={picLoading}\n                audioLoading={audioLoading}\n                videoLoading={videoLoading}\n                fileLoading={fileLoading}\n                setIsAudioRecording={setIsAudioRecording}\n                isRecording={isRecording}\n                onStop={onStop}\n                isAudioRecording={isAudioRecording}\n                setIsRecording={setIsRecording}\n              />\n            </FormControl>\n          </>\n        )}\n      </>\n    </>\n  );\n};\n\nexport default Footer;\n","import { Box, Text } from \"@chakra-ui/react\";\nimport { lazy, Suspense } from \"react\";\nimport ClimbingBoxLoader from \"react-spinners/ClimbingBoxLoader\";\nimport ChatHeader from \"./ChatHeader\";\nimport Footer from \"./Footer\";\nimport \"./styles.css\";\nconst ScrollableChat = lazy(() => import(\"./ScrollableChat\"));\n\nconst ChatScreen = ({\n  colorMode,\n  setSelectedChat,\n  message,\n  user,\n  fetchMessages,\n  deleteChat,\n  fetchAgain,\n  setFetchAgain,\n  selectedChat,\n  pic,\n  audio,\n  gif,\n  video,\n  file,\n  showPicker,\n  loading,\n  isTyping,\n  deleteMessage,\n  showGifPicker,\n  setGifHandler,\n  newMessage,\n  sendMessageButton,\n  sendMessage,\n  setShowPicker,\n  typingHandler,\n  postDetails,\n  picLoading,\n  setPic,\n  postAudio,\n  audioLoading,\n  videoLoading,\n  fileLoading,\n  setAudio,\n  setShowGifPicker,\n  setGif,\n  postVideo,\n  setVideo,\n  onEmojiClick,\n  setFile,\n  postFile,\n  star,\n  setStar,\n  isRecording,\n  setIsRecording,\n  isAudioRecording,\n  setIsAudioRecording,\n}) => {\n  const isPreview = pic || video || file || gif;\n  return (\n    <>\n      <ChatHeader\n        colorMode={colorMode}\n        setSelectedChat={setSelectedChat}\n        message={message}\n        user={user}\n        fetchMessages={fetchMessages}\n        deleteChat={deleteChat}\n        fetchAgain={fetchAgain}\n        setFetchAgain={setFetchAgain}\n        selectedChat={selectedChat}\n        isPreview={isPreview}\n        setPic={setPic}\n        setAudio={setAudio}\n        setVideo={setVideo}\n        setFile={setFile}\n        setGif={setGif}\n      />\n      {pic || gif || video || file || showPicker ? (\n        <></>\n      ) : (\n        <Box\n          d=\"flex\"\n          flexDir=\"column\"\n          justifyContent=\"flex-end\"\n          paddingInline={3}\n          w=\"100%\"\n          h=\"100%\"\n          borderRadius={!showPicker ? \"3xl\" : \"0.5rem 0.5rem 0 0\"}\n          overflowY=\"hidden\"\n          bg={colorMode === \"dark\" ? \"#2d3748\" : \"white\"}\n        >\n          {loading ? (\n            <Box\n              d=\"flex\"\n              flexDir=\"column\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              h=\"100%\"\n              w=\"100%\"\n            >\n              <ClimbingBoxLoader\n                size={30}\n                color={colorMode === \"dark\" ? \"#efeff1\" : \"#1a202c\"}\n              />\n              <Text fontFamily=\"nunito\" mt={20}>\n                It's Taking time because You Have More high Resolution Images or\n                Very Long Messages\n              </Text>\n            </Box>\n          ) : (\n            <Box\n              className=\"messages\"\n              bg={colorMode === \"dark\" ? \"#2d3748\" : \"white\"}\n            >\n              <Suspense fallback={<></>}>\n                <ScrollableChat\n                  message={message}\n                  selectedChat={selectedChat}\n                  isTyping={isTyping}\n                  deleteMessage={deleteMessage}\n                  star={star}\n                  setStar={setStar}\n                />\n              </Suspense>\n            </Box>\n          )}\n        </Box>\n      )}\n      <Footer\n        newMessage={newMessage}\n        sendMessageButton={sendMessageButton}\n        sendMessage={sendMessage}\n        setShowPicker={setShowPicker}\n        typingHandler={typingHandler}\n        postDetails={postDetails}\n        pic={pic}\n        picLoading={picLoading}\n        setPic={setPic}\n        postAudio={postAudio}\n        audio={audio}\n        audioLoading={audioLoading}\n        videoLoading={videoLoading}\n        fileLoading={fileLoading}\n        setAudio={setAudio}\n        showPicker={showPicker}\n        setShowGifPicker={setShowGifPicker}\n        showGifPicker={showGifPicker}\n        gif={gif}\n        setGif={setGif}\n        postVideo={postVideo}\n        video={video}\n        setVideo={setVideo}\n        onEmojiClick={onEmojiClick}\n        file={file}\n        setFile={setFile}\n        postFile={postFile}\n        setGifHandler={setGifHandler}\n        isRecording={isRecording}\n        setIsRecording={setIsRecording}\n        isAudioRecording={isAudioRecording}\n        setIsAudioRecording={setIsAudioRecording}\n      />\n    </>\n  );\n};\n\nexport default ChatScreen;\n","import { Box, useColorMode } from \"@chakra-ui/react\";\nimport { ChatState } from \"../context/ChatProvider\";\nimport SingleChat from \"./SingleChat\";\n\nconst ChatBox = ({ fetchAgain, setFetchAgain, isHidden, setIsHidden }) => {\n  const { selectedChat }: any = ChatState();\n  const { colorMode } = useColorMode();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", xl: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      overflow=\"hidden\"\n      p={3}\n      bg={colorMode === \"dark\" ? \"#2d3748\" : \"white\"}\n      w={{ base: \"100%\", xl: \"70%\" }}\n      h={{\n        base: selectedChat && \"100vh\",\n        xl: isHidden ? \"calc(100vh - 24px)\" : \"100%\",\n      }}\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default ChatBox;\n","import { Avatar, Box, Text } from \"@chakra-ui/react\";\n\nconst ChatListItem = ({\n  getSender,\n  loggedUser,\n  setSelectedChat,\n  chat,\n  selectedChat,\n  colorMode,\n  getSenderPic,\n}) => {\n  return (\n    <Box\n      onClick={() => setSelectedChat(chat)}\n      bg={\n        selectedChat === chat\n          ? \"#38B2AC\"\n          : colorMode === \"dark\"\n          ? \"#232b38\"\n          : \"#E8E8E8\"\n      }\n      color={selectedChat === chat || colorMode === \"dark\" ? \"white\" : \"black\"}\n      px={3}\n      py={2}\n      borderRadius=\"xl\"\n      key={chat._id}\n      boxShadow=\"inner\"\n      className=\"transition-all duration-500 ease-in-out drop-shadow-lg hover:shadow-2xl\"\n      _hover={{\n        color: \"white\",\n        bg: \"#38B2AC\",\n      }}\n    >\n      <Text fontFamily=\"Nunito\" fontSize={18} alignItems=\"center\" d=\"flex\">\n        <Avatar\n          name={\n            !chat.isGroupChat\n              ? getSender(loggedUser, chat.users)\n              : chat.chatName\n          }\n          src={\n            !chat.isGroupChat ? getSenderPic(loggedUser, chat.users) : chat.pic\n          }\n          width={10}\n          height={10}\n          mr={2}\n        />\n        {!chat.isGroupChat ? getSender(loggedUser, chat.users) : chat.chatName}\n      </Text>\n      {chat.latestMessage && (\n        <>\n          <Text fontSize=\"xs\" fontWeight=\"hairline\" fontFamily=\"Nunito\">\n            <b>{chat.latestMessage.sender.name}: </b>\n            {chat.latestMessage.content.length > 50\n              ? chat.latestMessage.content.substring(0, 51) + \"...\"\n              : chat.latestMessage.content}\n          </Text>\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default ChatListItem;\n","import { Stack } from \"@chakra-ui/react\";\nimport ChatListItem from './ChatListItem';\n\nconst ChatItem = ({\n  searchChat,\n  getSender,\n  loggedUser,\n  setSelectedChat,\n  selectedChat,\n  colorMode,\n  getSenderPic,\n  chats,\n}) => {\n  return (\n    <Stack overflowY=\"scroll\" w=\"100%\" h=\"100vh\" paddingInline=\"15px\">\n      {chats\n        .filter((chat) => {\n          if (searchChat === \"\") {\n            return chat;\n          } else if (\n            !chat.isGroupChat\n              ? getSender(loggedUser, chat.users)\n                  .toLowerCase()\n                  .includes(searchChat.toLowerCase())\n              : chat.chatName.toLowerCase().includes(searchChat.toLowerCase())\n          ) {\n            return chat;\n          }\n        })\n        .map((chat) => (\n          <ChatListItem\n            getSender={getSender}\n            loggedUser={loggedUser}\n            setSelectedChat={setSelectedChat}\n            chat={chat}\n            selectedChat={selectedChat}\n            colorMode={colorMode}\n            getSenderPic={getSenderPic}\n          />\n        ))}\n    </Stack>\n  );\n};\n\nexport default ChatItem;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack paddingInline=\"15px\">\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n      <Skeleton height=\"45px\" borderRadius=\"xl\" boxShadow=\"inner\" className=\"drop-shadow-lg\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","const GroupAdd = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      width=\"24\"\n      height=\"24\"\n      className=\"\"\n    >\n      <path\n        fill=\"currentColor\"\n        d=\"M19.005 3.175H4.674C3.642 3.175 3 3.789 3 4.821V21.02l3.544-3.514h12.461c1.033 0 2.064-1.06 2.064-2.093V4.821c-.001-1.032-1.032-1.646-2.064-1.646zm-4.989 9.869H7.041V11.1h6.975v1.944zm3-4H7.041V7.1h9.975v1.944z\"\n      />\n    </svg>\n  );\n};\n\nexport default GroupAdd;\n","import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useDisclosure,\n  FormControl,\n  FormLabel,\n  FormHelperText,\n  useToast,\n  Input,\n  Spinner,\n  Box\n} from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { ChatState } from \"../../context/ChatProvider\";\nimport axios from \"axios\";\nimport UserListItem from \"../userStufs/UserListItem\";\nimport UserBadgeItem from \"../userStufs/UserBadgeItem\";\n\nconst GroupChatModel = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName]: any = useState();\n  const [selectedUser, setSelectedUser]: any = useState([]);\n  const [search, setSearch]: any = useState(\"\");\n  const [searchResult, setSearchResult]: any = useState([]);\n  const [loading, setLoading]: any = useState(false);\n  const [picLoading, setPicLoading]: any = useState(false);\n  const [pic, setPic]: any = useState();\n\n  const toast = useToast();\n\n  const { user, chats, setChats }: any = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error: any) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    }\n  };\n\n  const postDetails = (pics) => {\n    setPicLoading(true);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat-app-mern\");\n      data.append(\"cloud_name\", \"yuvraj-choudahry-dev\");\n      fetch(\n        \"https://api.cloudinary.com/v1_1/yuvraj-choudahry-dev/image/upload\",\n        {\n          method: \"post\",\n          body: data\n        }\n      )\n        .then((res) => res.json())\n        .then((data) => {\n          setPic(data.url.toString());\n          setPicLoading(false);\n        })\n        .catch((err) => {\n          setPicLoading(false);\n        });\n    } else {\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUser) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          pic: pic,\n          users: JSON.stringify(selectedUser.map((u: any) => u._id))\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    } catch (error: any) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n    }\n  };\n\n  const handleDelete = (u: any) => {\n    setSelectedUser(selectedUser.filter((s: any) => s._id !== u._id));\n  };\n\n  const handleGroup = (userToAdd: any) => {\n    if (selectedUser.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\"\n      });\n      return;\n    }\n    setSelectedUser([...selectedUser, userToAdd]);\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal\n        size=\"3xl\"\n        isOpen={isOpen}\n        onClose={onClose}\n        isCentered\n        motionPreset=\"slideInBottom\"\n      >\n        <ModalOverlay bg=\"none\" backdropFilter=\"auto\" backdropBlur=\"5px\" />\n        <ModalContent minHeight=\"450px\">\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Nunito\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton borderRadius=\"50%\" fontSize=\"15px\" variant=\"\" />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                type=\"file\"\n                p={1.5}\n                accept=\"image/*\"\n                onChange={(e: any) => postDetails(e.target.files[0])}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: yuvraj, gorge, dani, dream\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUser.map((u) => (\n                <UserBadgeItem\n                  key={user._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              <Spinner ml=\"auto\" d=\"flex\" />\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button colorScheme=\"blue\" onClick={handleSubmit}>\n              Go\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModel;\n","import { Box, Input, useColorMode, useToast } from \"@chakra-ui/react\";\nimport { IconButton } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender, getSenderPic } from \"../config/ChatLogics\";\nimport { ChatState } from \"../context/ChatProvider\";\nimport ChatList from \"./ChatList\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupAdd from \"./icons/GroupAdd\";\nimport GroupChatModel from \"./miscellaneous/GroupChatModel\";\n\nconst Chats = ({ fetchAgain, isHidden, setIsHidden }) => {\n  const [loggedUser, setLoggedUser]: any = useState();\n  const { selectedChat, setSelectedChat, user, chats, setChats }: any =\n    ChatState();\n  const { colorMode } = useColorMode();\n  const [searchChat, setSearchChat]: any = useState(\"\"); \n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")!));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", xl: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      bg=\"white\"\n      h={{ base: isHidden ? \"calc(100vh - 24px)\" : \"100%\" }}\n      w={{ base: \"100%\", xl: \"30%\" }}\n      backgroundColor={colorMode === \"dark\" ? \"#2d3748\" : \"#fff\"}\n    >\n      <Box\n        pb={2}\n        pt={3}\n        px=\"15px\"\n        fontSize={{ base: \"28px\", xl: \"30px\" }}\n        fontFamily=\"Nunito\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        <Input\n          placeholder=\"Search Chats\"\n          value={searchChat}\n          onChange={(e) => setSearchChat(e.target.value)}\n          borderColor=\"rgb(255 255 255 / 0%)\"\n        />\n        <GroupChatModel>\n          <IconButton style={{ marginLeft: 7, color: \"#898787\" }}>\n            <GroupAdd />\n          </IconButton>\n        </GroupChatModel>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        pt={3}\n        w=\"100%\"\n        h=\"100vh\"\n        borderRadius=\"3xl\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <ChatList\n            searchChat={searchChat}\n            chats={chats}\n            getSender={getSender}\n            loggedUser={loggedUser}\n            setSelectedChat={setSelectedChat}\n            selectedChat={selectedChat}\n            colorMode={colorMode}\n            getSenderPic={getSenderPic}\n          />\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Chats;\n","import { Box } from \"@chakra-ui/react\";\n\nconst Moon = () => {\n    return (\n      <Box fontSize=\"lg\" m={1}>\n        <svg\n          stroke=\"currentColor\"\n          fill=\"currentColor\"\n          stroke-width=\"0\"\n          viewBox=\"0 0 512 512\"\n          aria-hidden=\"true\"\n          focusable=\"false\"\n          height=\"1em\"\n          width=\"1em\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path d=\"M283.211 512c78.962 0 151.079-35.925 198.857-94.792 7.068-8.708-.639-21.43-11.562-19.35-124.203 23.654-238.262-71.576-238.262-196.954 0-72.222 38.662-138.635 101.498-174.394 9.686-5.512 7.25-20.197-3.756-22.23A258.156 258.156 0 0 0 283.211 0c-141.309 0-256 114.511-256 256 0 141.309 114.511 256 256 256z\"></path>\n        </svg>\n      </Box>\n    );\n};\n\nexport default Moon;\n","import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  useDisclosure\n} from \"@chakra-ui/react\";\n\nconst Chatdapp = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal\n        size=\"3xl\"\n        isOpen={isOpen}\n        onClose={onClose}\n        isCentered\n        motionPreset=\"slideInBottom\"\n      >\n        <ModalOverlay bg=\"none\" backdropFilter=\"auto\" backdropBlur=\"5px\" />\n        <ModalContent minHeight=\"450px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Nunito\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          ></ModalHeader>\n          <ModalCloseButton borderRadius=\"50%\" fontSize=\"15px\" variant=\"\" />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Text fontSize={{ base: \"28px\", md: \"30px\" }} fontFamily=\"Nunito\">\n              Created By :{\" \"}\n              <a href=\"https://www.github.com/Yuvraj-choudhary\" target=\"_blank\">\n                Yuvraj Choudhary 😜\n              </a>\n              ,\n            </Text>\n            <Text fontSize={{ base: \"28px\", md: \"30px\" }} fontFamily=\"Nunito\">\n              Coded By :{\" \"}\n              <a href=\"https://www.github.com/Yuvraj-choudhary\" target=\"_blank\">\n                Yuvraj Choudhary 😒\n              </a>\n              ,\n            </Text>\n            <Text fontSize={{ base: \"28px\", md: \"30px\" }} fontFamily=\"Nunito\">\n              Deployed By :{\" \"}\n              <a href=\"https://www.github.com/Yuvraj-choudhary\" target=\"_blank\">\n                Yuvraj Choudhary 😉\n              </a>\n            </Text>\n          </ModalBody>\n          <ModalFooter></ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default Chatdapp;\n","import {\n  Button,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  useDisclosure,\n  FormControl,\n  Input,\n  FormLabel\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nconst SearchModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [search, setSearch] = useState(\"\");\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal\n        isCentered\n        onClose={onClose}\n        isOpen={isOpen}\n        motionPreset=\"slideInBottom\"\n        size=\"3xl\"\n      >\n        <ModalOverlay bg=\"none\" backdropFilter=\"auto\" backdropBlur=\"5px\" />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Nunito\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Search The Web\n          </ModalHeader>\n          <ModalCloseButton borderRadius=\"50%\" fontSize=\"15px\" variant=\"\" />\n          <ModalBody>\n            <FormControl isRequired d=\"flex\">\n              <Input\n                placeholder=\"Search The Web\"\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              {search ? (\n                <>\n                  <a\n                    href={`https://www.google.com/search?q=${search}`}\n                    target=\"_blank\"\n                  >\n                    <Button variant=\"solid\" colorScheme=\"teal\" ml={2}>\n                      Go\n                    </Button>\n                  </a>\n                </>\n              ) : (\n                <Button variant=\"solid\" colorScheme=\"teal\" ml=\"10px\" disabled>\n                  Go\n                </Button>\n              )}\n            </FormControl>\n          </ModalBody>\n          <ModalFooter></ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default SearchModal;\n","import { useDisclosure } from \"@chakra-ui/hooks\";\nimport {\n  BellIcon,\n  ChevronDownIcon,\n  ChevronUpIcon,\n  Search2Icon,\n  SunIcon,\n} from \"@chakra-ui/icons\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n  IconButton,\n  Input,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Spinner,\n  Text,\n  Tooltip,\n  useColorMode,\n  useToast,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport NotificationBadge, { Effect } from \"react-notification-badge\";\nimport { useHistory } from \"react-router-dom\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport { ChatState } from \"../../context/ChatProvider\";\nimport ChatLoading from \"../ChatLoading\";\nimport Moon from \"../icons/Moon\";\nimport UserListItem from \"../userStufs/UserListItem\";\nimport Chatdapp from \"./Chatdapp\";\nimport ProfileModel from \"./ProfileModel\";\nimport SearchModal from \"./SearchModal\";\n\nconst SideDrawer = ({ isHidden, setIsHidden }) => {\n  const [search, setSearch]: any = useState(\"\");\n  const [searchResult, setSearchResult]: any = useState([]);\n  const [loading, setLoading]: any = useState(false);\n  const [loadingChat, setLoadingChat]: any = useState(false);\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const {\n    user,\n    setSelectedChat,\n    chats,\n    setChats,\n    setNotification,\n    notification,\n    selectedChat,\n  }: any = ChatState();\n  const history = useHistory();\n  const toast = useToast();\n  const { colorMode, toggleColorMode } = useColorMode();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    try {\n      setLoadingChat(true);\n\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error: any) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      {!isHidden ? (\n        <Box d={isHidden ? \"none\" : \"flex\"}>\n          <Box\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            bg={colorMode === \"dark\" ? \"#2d3748\" : \"white\"}\n            w=\"100%\"\n            p=\"5px 10px 5px 10px\"\n            borderWidth=\"5px\"\n            borderColor={colorMode === \"dark\" ? \"#232b38\" : \"#e5e7eb\"}\n            d={{ base: !selectedChat ? \"flex\" : \"none\", xl: \"flex\" }}\n          >\n            <Box d=\"flex\">\n              <Tooltip\n                label=\"Search Users to chats\"\n                hasArrow\n                placement=\"bottom-end\"\n              >\n                <Button\n                  variant=\"\"\n                  onClick={onOpen}\n                  mr={2}\n                  d=\"flex\"\n                  alignItems=\"center\"\n                >\n                  <Search2Icon />\n                  <Text\n                    fontFamily=\"Nunito\"\n                    fontWeight=\"medium\"\n                    d={{ base: \"none\", md: \"initial\" }}\n                    pl=\"3\"\n                    pt=\"0.5\"\n                  >\n                    Search Users\n                  </Text>\n                </Button>\n              </Tooltip>\n              <IconButton\n                aria-label=\"hi\"\n                icon={<ChevronUpIcon fontSize=\"2xl\" />}\n                variant=\"\"\n                isRound\n                onClick={() => {\n                  setIsHidden(true);\n                }}\n              />\n            </Box>\n            <Chatdapp>\n              <Button\n                fontSize=\"2xl\"\n                fontWeight=\"bold\"\n                fontFamily=\"Nunito\"\n                d={{ base: \"none\", md: \"flex\" }}\n                variant=\"\"\n              >\n                Chat Dapp\n              </Button>\n            </Chatdapp>\n            <Box>\n              <IconButton\n                onClick={() => toggleColorMode()}\n                aria-label=\"mode\"\n                mr={2}\n                variant=\"\"\n                isRound\n              >\n                {colorMode === \"dark\" ? (\n                  <SunIcon fontSize=\"xl\" m={1} />\n                ) : (\n                  <Moon />\n                )}\n              </IconButton>\n              <Menu>\n                <MenuButton p={1} as={IconButton} mr={2} variant=\"\" isRound>\n                  <NotificationBadge\n                    count={notification.length}\n                    effect={Effect.SCALE}\n                  />\n                  <BellIcon fontSize=\"2xl\" m={1} />\n                </MenuButton>\n\n                <MenuList\n                  p={2}\n                  borderColor=\"#d3d3d300\"\n                  boxShadow=\"2xl\"\n                  borderRadius=\"25px\"\n                >\n                  {!notification.length && (\n                    <Text fontFamily=\"Nunito\" p={3} fontSize={18}>\n                      No New Messages\n                    </Text>\n                  )}\n                  {notification.map((notif: any) => (\n                    <MenuItem\n                      key={notif._id}\n                      onClick={() => {\n                        setSelectedChat(notif.chat);\n                        setNotification(\n                          notification.filter((n) => n !== notif)\n                        );\n                      }}\n                    >\n                      <Text fontFamily=\"Nunito\" p={3} fontSize={18}>\n                        {notif.chat.isGroupChat\n                          ? `New Message in ${notif.chat.chatName}`\n                          : `New Message from ${getSender(\n                              user,\n                              notif.chat.users\n                            )}`}\n                      </Text>\n                    </MenuItem>\n                  ))}\n                </MenuList>\n              </Menu>\n              <Menu>\n                <MenuButton\n                  as={Button}\n                  rightIcon={<ChevronDownIcon />}\n                  variant=\"\"\n                  isRound\n                >\n                  <Box display=\"flex\" alignItems=\"center\">\n                    <Avatar\n                      size={\"sm\"}\n                      cursor=\"pointer\"\n                      name={user.name}\n                      src={user.pic}\n                    />\n                  </Box>\n                </MenuButton>\n                <MenuList\n                  borderColor=\"#d3d3d300\"\n                  borderRadius=\"33px\"\n                  boxShadow=\"2xl\"\n                >\n                  <MenuItem borderRadius=\"24px 24px 0 0\">\n                    <ProfileModel user={user}>My Profile</ProfileModel>\n                  </MenuItem>\n                  <MenuDivider />\n                  <MenuItem>\n                    <Text\n                      p={2}\n                      fontSize={18}\n                      onClick={logoutHandler}\n                      fontFamily=\"Nunito\"\n                    >\n                      Logout\n                    </Text>\n                  </MenuItem>\n                  <MenuDivider />\n                  <MenuItem borderRadius=\"0 0 24px 24px\">\n                    <SearchModal>\n                      <Text\n                        p={2}\n                        fontSize={18}\n                        onClick={logoutHandler}\n                        fontFamily=\"Nunito\"\n                      >\n                        Search Web\n                      </Text>\n                    </SearchModal>\n                  </MenuItem>\n                </MenuList>\n              </Menu>\n            </Box>\n          </Box>\n\n          <Drawer isOpen={isOpen} placement=\"left\" onClose={onClose} size=\"xl\">\n            <DrawerOverlay bg=\"none\" backdropFilter=\"auto\" backdropBlur=\"6px\" />\n            <DrawerContent>\n              <DrawerCloseButton\n                borderRadius=\"50%\"\n                fontSize=\"15px\"\n                variant=\"\"\n              />\n              <DrawerHeader\n                borderBottomWidth=\"1px\"\n                borderColor=\"rgb(255 255 255 / 0%)\"\n              >\n                Search Users\n              </DrawerHeader>\n\n              <DrawerBody>\n                <Box d=\"flex\" pb={2}>\n                  <Input\n                    placeholder=\"Search by name or email\"\n                    mr={2}\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                    borderColor=\"rgb(255 255 255 / 0%)\"\n                  />\n                  <Button variant=\"\" onClick={handleSearch}>\n                    Go\n                  </Button>\n                </Box>\n                {loading ? (\n                  <ChatLoading />\n                ) : (\n                  searchResult?.map((userFilter: any) => (\n                    <UserListItem\n                      key={userFilter._id}\n                      user={userFilter}\n                      handleFunction={() => accessChat(userFilter._id)}\n                    />\n                  ))\n                )}\n                {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n              </DrawerBody>\n            </DrawerContent>\n          </Drawer>\n        </Box>\n      ) : (\n        <Box\n          d={{ base: !selectedChat ? \"flex\" : \"none\", xl: \"flex\" }}\n          justifyContent=\"center\"\n          onClick={() => {\n            setIsHidden(false);\n          }}\n        >\n          <ChevronDownIcon fontSize={25} cursor=\"pointer\" />\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport ChatBox from \"../components/ChatBox\";\nimport Chats from \"../components/Chats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../context/ChatProvider\";\nimport \"./styles.css\";\n\nconst Chatpage = () => {\n  const { user }: any = ChatState();\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const [isHidden, setIsHidden]: any = useState(false);\n\n  return (\n    <Box\n      style={{ width: \"100%\" }}\n      overflow=\"hidden\"\n      className=\"chat-anim\"\n    >\n      {user && <SideDrawer isHidden={isHidden} setIsHidden={setIsHidden} />}\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        w=\"100%\"\n        className=\"chat-box\"\n      >\n        {user && (\n          <Chats\n            fetchAgain={fetchAgain}\n            isHidden={isHidden}\n            setIsHidden={setIsHidden}\n          />\n        )}\n        {user && (\n          <ChatBox\n            fetchAgain={fetchAgain}\n            setFetchAgain={setFetchAgain}\n            isHidden={isHidden}\n            setIsHidden={setIsHidden}\n          />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Chatpage;\n"],"names":["getSender","loggedUser","users","_id","name","getSenderFull","getSenderPic","pic","isSameSender","message","m","i","userId","length","sender","undefined","isLastMessage","isSameSenderMargin","messages","isSameReceiver","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","storage","getStorage","socket","selectedChatCompare","user","children","useDisclosure","isOpen","onOpen","onClose","fontFamily","p","fontSize","onClick","size","isCentered","motionPreset","bg","backdropFilter","backdropBlur","minHeight","d","justifyContent","borderRadius","variant","flexDir","alignItems","boxSize","src","base","md","email","handleFunction","px","py","mb","backgroundColor","color","cursor","pl","colorMode","useColorMode","w","boxShadow","className","_hover","mr","fetchMessages","fetchAgain","setFetchAgain","useState","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","loading","setLoading","renameloading","setRenameLoading","setPic","toast","useToast","ChatState","selectedChat","setSelectedChat","handleSearch","query","config","headers","Authorization","token","axios","data","console","log","title","description","status","duration","isClosable","position","handleRename","chatId","chatName","response","handleAddUser","user1","find","u","groupAdmin","handleRemove","flexWrap","pb","map","placeholder","value","onChange","e","target","colorScheme","ml","isLoading","type","accept","file","match","reader","FileReader","addEventListener","result","readAsDataURL","alert","postDetails","files","deleteChat","isPreview","setVideo","setAudio","setFile","setGif","history","useHistory","xl","in","offsetY","icon","Close","isRound","push","isGroupChat","textOverflow","whiteSpace","maxWidth","overflow","marginLeft","Refresh","as","IconButton","MoreVert","borderColor","xmlns","viewBox","width","height","fill","showPicker","showGifPicker","setShowGifPicker","postVideo","postFile","style","marginRight","Gif","htmlFor","id","display","newMessage","audio","gif","video","sendMessageButton","picLoading","audioLoading","videoLoading","fileLoading","setIsAudioRecording","isRecording","onStop","isAudioRecording","setIsRecording","RecordState","trim","disableRipple","SettingsVoiceRounded","Mic","state","canvasWidth","canvasHeight","setShowPicker","val","typingHandler","TextareaAutosize","minRows","maxRows","maxHeight","border","outline","background","padding","sendMessage","postAudio","onEmojiClick","setGifHandler","audioData","url","showRotation","showZoom","showDownload","alt","controls","emojiVersion","emojiSize","set","tabsVariant","styles","indicatorColor","fontColor","searchBackgroundColor","tabsFontColor","searchFontColor","skinTonePickerBackgroundColor","mode","onSelected","downsized","isRequired","mt","onKeyDown","pt","ScrollableChat","lazy","isTyping","deleteMessage","star","setStar","paddingInline","h","overflowY","Suspense","fallback","setMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","setIsTyping","setAudioLoading","setVideoLoading","setFileLoading","audioPlay","Audio","setNotification","notification","emit","useEffect","io","on","newMessages","chat","includes","keyCode","content","image","play","lastTypingTime","Date","getTime","setTimeout","FormData","append","fetch","method","body","then","res","json","toString","catch","err","emojiObject","storageRef","ref","uploadTask","uploadBytesResumable","snapshot","getDownloadURL","isHidden","setIsHidden","latestMessage","fontWeight","substring","searchChat","chats","filter","toLowerCase","selectedUser","setSelectedUser","setPicLoading","setChats","handleSubmit","JSON","stringify","pics","s","handleDelete","slice","userToAdd","setLoggedUser","setSearchChat","fetchChats","parse","localStorage","getItem","ChatList","stroke","focusable","href","disabled","loadingChat","setLoadingChat","toggleColorMode","logoutHandler","removeItem","accessChat","c","borderWidth","label","hasArrow","placement","count","effect","Effect","notif","n","Button","rightIcon","borderBottomWidth","userFilter"],"sourceRoot":""}